name: "fiap-tech-challenge"
services:
  contacts-api:
    container_name: contact-api
    image: lucasfm95/fiap-tech-challenge-fase3:latest
    environment:
      CONNECTION_STRING_DB_POSTGRES: Host=postgres;Port=5432;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB}
      MASS_TRANSIT_USERNAME: ${MASS_TRANSIT_USERNAME}
      MASS_TRANSIT_PASSWORD: ${MASS_TRANSIT_PASSWORD}
      MASS_TRANSIT_DELETE_QUEUE_NAME: ${MASS_TRANSIT_DELETE_QUEUE_NAME}
      "MASS_TRANSIT_INSERT_QUEUE_NAME": ${MASS_TRANSIT_INSERT_QUEUE_NAME}
      "MASS_TRANSIT_UPDATE_QUEUE_NAME": ${MASS_TRANSIT_UPDATE_QUEUE_NAME}
      MASS_TRANSIT_HOST: ${MASS_TRANSIT_HOST}
      MASS_TRANSIT_PORT: ${MASS_TRANSIT_PORT}
    restart: unless-stopped
    ports:
      - 8080:80
    networks:
      - fiap-tech-challenge_network
    depends_on:
      rabbitmq-mass-transit: 
        condition: service_healthy
      postgres:
        condition: service_started
  
  contact-deleted-consumer-worker:
    container_name: contact-deleted-consumer
    image: lucasfm95/fiap-tech-challenge-delete-fase3:latest
    environment:
      MASS_TRANSIT_USERNAME: ${MASS_TRANSIT_USERNAME}
      MASS_TRANSIT_PASSWORD: ${MASS_TRANSIT_PASSWORD}
      MASS_TRANSIT_HOST: ${MASS_TRANSIT_HOST}
      MASS_TRANSIT_PORT: ${MASS_TRANSIT_PORT}
      MASS_TRANSIT_DELETE_QUEUE_NAME: ${MASS_TRANSIT_DELETE_QUEUE_NAME}
      CONNECTION_STRING_DB_POSTGRES: Host=postgres;Port=5432;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB}
    restart: unless-stopped
    networks:
      - fiap-tech-challenge_network
    ports:
      - 8890:80
    depends_on:
      rabbitmq-mass-transit: 
        condition: service_healthy
      postgres:
        condition: service_started
      contacts-api:
        condition: service_started
        
  contact-iserted-consumer-worker:
    container_name: contact-inserted-consumer
    image: lucasfm95/fiap-tech-challenge-insert-fase3:latest
    environment:
      MASS_TRANSIT_USERNAME: ${MASS_TRANSIT_USERNAME}
      MASS_TRANSIT_PASSWORD: ${MASS_TRANSIT_PASSWORD}
      MASS_TRANSIT_HOST: ${MASS_TRANSIT_HOST}
      MASS_TRANSIT_PORT: ${MASS_TRANSIT_PORT}
      MASS_TRANSIT_INSERT_QUEUE_NAME: ${MASS_TRANSIT_INSERT_QUEUE_NAME}
      CONNECTION_STRING_DB_POSTGRES: Host=postgres;Port=5432;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB}
    restart: unless-stopped
    networks:
      - fiap-tech-challenge_network
    ports:
      - 8891:80
    depends_on:
      rabbitmq-mass-transit:
        condition: service_healthy
      postgres:
        condition: service_started
      contacts-api:
        condition: service_started

  rabbitmq-mass-transit:
    container_name: rabbitmq-mass-transit
    image: masstransit/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    expose:
     - 15672
     - 5672
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 3s
        timeout: 3s
        retries: 5
    restart: unless-stopped
    networks:
      - fiap-tech-challenge_network
    environment:
      RABBITMQ_DEFAULT_USER: ${MASS_TRANSIT_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${MASS_TRANSIT_PASSWORD}

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - prometheus-storage:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped
    ports:
      - 9090:9090
    networks:
      - fiap-tech-challenge_network
    depends_on:
      - contacts-api
  
  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/config/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - fiap-tech-challenge_network
    depends_on:
      - prometheus
      - postgres
      - contacts-api
      - contact-deleted-consumer-worker
      
  postgres:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    restart: unless-stopped
    ports:
      - 5432:5432
    networks:
      - fiap-tech-challenge_network

volumes:
  postgres-db-volume:
    external: false
  grafana-storage:
    external: false
  prometheus-storage:
    external: false
  rabbitmq-data:
    external: false
  
networks:
  fiap-tech-challenge_network:
    driver: bridge
    
    
    